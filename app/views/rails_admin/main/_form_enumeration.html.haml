- unless field.multiple?

  - object_name = @object.class.name.underscore
  - field_name = field.method_name 

  .btn-group.btn-group-toggle{"data-toggle" => "buttons"}
    - field.enum.each do |at|
      %label.btn.btn-info
        %input{id: "#{object_name}_#{field_name}_#{at[1]}", name: "#{object_name}[#{field_name}]", type: "radio", value: at[1], checked: (field.form_value.eql? at[1])}
        = at[0]&.titleize


      =# form.select field.method_name, field.enum, { include_blank: true }.reverse_merge({ selected: field.form_value }), field.html_attributes.reverse_merge({ data: { enumeration: true }, placeholder: t('admin.misc.search') })
- else
  - js_data = {xhr: false, sortable: false, cacheAll: true, regional: {add: t("admin.misc.add_new"), chooseAll: t("admin.misc.chose_all"), clearAll: t("admin.misc.clear_all"), down: t("admin.misc.down"), remove: t("admin.misc.remove"), search: t("admin.misc.search"), up: t("admin.misc.up")}}
  = form.select field.method_name, field.enum, { selected: field.form_value, object: form.object }, field.html_attributes.reverse_merge({data: { filteringmultiselect: true, options: js_data.to_json }, multiple: true})
