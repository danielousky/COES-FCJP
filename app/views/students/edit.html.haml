-# frozen_string_literal: true
= render partial: 'layouts/progress_wizard', locals: {active: 3}

.vh-100.d-flex.justify-content-center
  .col-md-10
    .border.p-3
      = simple_form_for @student, html: {novalidate: false } do |f|
        %h5.text-center.bg-dark.text-info.p-1 REGISTRO DE DATOS
        %h5.text-center.bg-info.p-1 PASO 3: INFORMACIÓN IMPORTANTE COMPLEMENTARIA:
        - # Origins
        = render partial: 'form_origins', locals: {f: f}

        - # Birth Date
        = f.input :birth_date, as: :date, start_year: Date.today.year - 16,
                              end_year: Date.today.year - 100

        - # Nacionality:
        .mb-3.string.required.student_nacionality
          = f.label :nacionality, 'Nacionalidad:', class: 'form-label string required'
          %br
          - Student.nacionalities.map do |k,v|
            %label.btn.btn-secondary.btn-sm
              = radio_button_tag '[student]nacionality', k, (@student.nacionality.eql? k), required: true, class: 'required'
              = k.titleize

        - # Maritals:
        .mb-3.string.required.student_marital_status
          = f.label :marital_status, 'Estdo Civil:', class: 'form-label string required'
          %br
          - Student.marital_statuses.map do |k,v|
            %label.btn.btn-secondary.btn-sm
              = radio_button_tag '[student]marital_status', k, (@student.marital_status.eql? k), required: true, class: 'required'
              = k.titleize

        - # Disability:
        .mb-3.string.required.student_disability
          = f.label :disability, 'Discapacidad:', class: 'form-label string required'
          %br
          - Student.disabilities.map do |k,v|
            %label.btn.btn-secondary.btn-sm
              = radio_button_tag '[student]disability', k, (@student.disability.eql? k), class: 'required'
              = k.titleize
        .mb-3.string.required.student_disability
          = label_tag nil, '¿Es egresado universitario?:', class: 'form-label string'

          %label.btn.btn-secondary.btn-sm
            = radio_button_tag 'grade', nil, true, onclick: "$('#upgrade').toggleClass('d-none')"
            No
          %label.btn.btn-secondary.btn-sm
            = radio_button_tag 'grade', nil, false, onclick: "$('#upgrade').toggleClass('d-none')"
            Sí
        #upgrade.d-none
          = f.input :grade_title 
          = f.input :grade_university 
          = f.input :graduate_year, input_html: {value: Time.now.year, min: Time.now.year - 50, step: 1, max: Time.now.year} 
          
        %hr
        -# Formulario para actualizar admission_type y start_process para todos los grades que lo requieran
        - if @student.grades.present?
          - @student.grades.select{ |grade| grade.admission_type.nil? || grade.start_process.nil? || grade.admission_type&.code == '0001'}.each do |grade|
            .mb-3
              %h6.bg-info.mt-3.p-3.text-center
                Actualiza tu tipo de admisión y período de ingreso a la
                = grade.school&.name&.presence || "Sin título"
              = f.fields_for :grades, grade do |g|
                = g.hidden_field :id
                =# g.input :admission_type, collection: AdmissionType.where.not(code: '0001').map { |at| [at.name&.titleize, at.id] }, input_html: {prompt: 'Seleccione tipo de admisión', selected: grade.admission_type_id}
                = g.select(:admission_type_id, AdmissionType.where.not(code: '0001').map { |at| [at.name&.titleize, at.id] }, {include_blank: 'Selecciona tipo de admisión...'}, {class: "form-control required", required: true})
                -# Si el grade.admission_type_id es '0001' (Admisión Libre), se envía el mensaje de indicando que debe actualizarse
                - if grade.admission_type&.code == '0001'

                  %div.alert.alert-danger.mt-0
                    %strong Atención:
                    = "Debes indicar el tipo de admisión para continuar con el registro."

                =# g.input :start_process, collection: grade.school.academic_processes.map{|ap|[ap.name_without_school, ap.id]}, input_html: {prompt: 'Seleccione Período'}, selected: grade.start_process_id
                = g.select(:start_process_id, grade.school.academic_processes.map{|ap|[ap.name_without_school, ap.id]}, { include_blank: 'Selecciona Período que ingresó...'}, {class: "form-control required", required: true})

        %hr

        = link_to 'Atrás', edit_user_path(current_student), class: 'btn btn-secondary'
        = f.submit 'Siguiente', class: 'btn btn-primary float-end', disable_with: 'Cargando...'
        %br
        %br

:javascript

  function sendData(url, children, data){
    $.ajax({
      url: url,
      dataType: 'json', 
      type: 'GET',
      data: data,
      beforeSend: function(xhr) {
        xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))
        $('#cargando a').html(`Cargando... `);
        $('#cargando').show();
      },
      success: function (data) {
        let selectorAux = $('#'+children);
        selectorAux.empty();
        selectorAux.append($("<option></option>").attr("value",'').text('--- Seleccione ---'));

        for (let e of data){
          $('#'+children)
            .append($("<option></option>")
              .attr("value",e)
              .text(e));
        }
      },
      complete: function(){
        $('#cargando').hide();
      }
    });
  };

  function sendCountry(elem){
    let children = elem.attr('children');
    let url = elem.attr('url');

    sendData(url, children, {term: elem.val()});
  }


